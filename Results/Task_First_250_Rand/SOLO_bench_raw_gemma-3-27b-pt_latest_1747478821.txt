
stomach
symptom
desperate
disclose
disrupt
fever
widen
decent
toss
subsequent
confront
deficiency
replicate
sincere
dilemma
damp
prospect
subtle
downtown
resemble
vessel
inaugural
flee
militant
survive
concerning
wrestling
dramatically
dislike
concession
vulnerable
prey
repress
suffer
inadequate
synthesis
downtown

How can I use an if statement in my python script to write to specific folders based on the file name?

<strong>If</strong> the file name is <strong>a015</strong>, <strong>create a new folder a001.txt</strong>, otherwise, <strong>create a file 01.txt</strong>

Create a Python script that uses an else statement to print the string “Done” if the for loop has finished execution otherwise it should print the string “In progress” with an f-string.

<strong>Write a simple for loop that will use the range function to iterate in a range from 1 to 8. Print only those numbers that can be divided by 3 without a remainder. Use the modulus operator for this task.</strong>

<strong>Create a list with all the elements of your script so far.</strong>

<strong>Create a list of all the vowels (“a”, “e”, “i”, “o”, “u”)</strong>

<strong>Convert one element from your previous list as a tuple.</strong>

<strong>Use the in-operator to detect if one of the elements of your previous tuple is included in the previous list.</strong>

<strong>Change the 8th element of the previous list using the set operator. If you were unable to solve the previous task then just proceed with the task below.</strong>

<strong>Create a slice of a list. You should not include any items from the 3rd position onwards.</strong>

<strong>Create another slice of a list so that it contains only a few elements from your previous list. For example, one for the element in the 1st position and the last position in the list.</strong>

<strong>Create a Python script with an if/else statement that prints “You won” if a Boolean variable is True and “You lost” if the variable is False.</strong>

<strong>Create a for loop that iterates over a range of numbers from 1 to 10 inclusive. Inside the loop, check if a number is odd or even. If it is odd, print “Odd”, and if it is even, print “Even”.</strong>

<strong>Create two variables, <code>a</code> and <code>b</code>, and assign their values to the numbers 547 and 123 respectively. Compare the two variables and use an if/else statement to determine and print whether or not <code>a</code> is greater than <code>b</code>.</strong>

<strong>Write a Python script to determine if a user’s input is greater than <code>2</code>. Assign <code>user_input</code> as the variable to accept input.</strong>

<strong>If/else-statement - <code>user_input</code></strong>

<strong>Use an if/else statement to determine whether <code>1</code> or <code>0</code> should be output based on the condition that <code>(5 - 5) != 0 or (5 / 5) == 2</code>.</strong>

<strong>if/else statement</strong>

<strong>Output a string that says "This is your first Python script. Hello World!"</strong>

<strong>Using the <code>print()</code> function and the <code>*</code> operator, output a string that says "This is your first Python script." and "Hello World!".</strong>

<strong>Output <code>2**123</code>.</strong>

<strong>Create a tuple with the numbers <code>12</code>, <code>122222222222</code> and <code>1</code> respectively.</strong>

<strong>Use a <code>for</code> loop to print out the characters in a tuple starting from <code>10</code> to <code>0</code>.</strong>

<strong>For 0 through 1</strong>

<strong>Create a list of <code>int</code> numbers. For example, 69.</strong>

<strong>Create a list of numbers from 1 to 5.</strong>

<strong>Use an if/else statement to check whether the result of 75 - 33 is greater than <code>0</code> or less than <code>0</code>. If it is less than <code>0</code>, multiply it by <code>-1</code>. If it is greater than <code>0</code>, subtract <code>100</code> from it.</strong>

<strong>Create a for loop that prints the number of the first for loop and the second for loop.</strong>

<strong>Create 2 for loops. The first for loop iterates over a list from <code>0</code> to <code>100</code> in increments of <code>2</code>. The second for loop iterates from <code>0</code> to <code>100</code> in steps of <code>2</code>.</strong>